using UnityEngine;
using System.Collections.Generic;

/// <summary>
/// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Å–∞–Ω–∏–π TouchProcessor.
/// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∫–∞—Å–∞–Ω–∏–π –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö.
/// </summary>
public class TouchExample : MonoBehaviour
{
    [Header("–°—Å—ã–ª–∫–∏")]
    public TouchProcessor touchProcessor;
    
    [Header("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Å–∞–Ω–∏–π")]
    public GameObject touchVisualizationPrefab; // –ü—Ä–µ—Ñ–∞–± –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Å–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—Å—Ç–æ–π Cube)
    public Transform touchContainer; // –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –æ–±—ä–µ–∫—Ç –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Å–∞–Ω–∏–π

    // –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –∫–∞—Å–∞–Ω–∏–π
    private Dictionary<int, GameObject> _touchVisuals = new Dictionary<int, GameObject>();

    void Start()
    {
        if (touchProcessor == null)
        {
            Debug.LogError("TouchProcessor –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!", this);
            enabled = false;
            return;
        }

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∫–∞—Å–∞–Ω–∏–π
        touchProcessor.OnTouchBegan += OnTouchBegan;
        touchProcessor.OnTouchMoved += OnTouchMoved;
        touchProcessor.OnTouchEnded += OnTouchEnded;
        
        Debug.Log("TouchExample –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ì–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞—Å–∞–Ω–∏–π.");
    }

    void OnDestroy()
    {
        // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
        if (touchProcessor != null)
        {
            touchProcessor.OnTouchBegan -= OnTouchBegan;
            touchProcessor.OnTouchMoved -= OnTouchMoved;
            touchProcessor.OnTouchEnded -= OnTouchEnded;
        }
    }

    /// <summary>
    /// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤–æ–µ –∫–∞—Å–∞–Ω–∏–µ.
    /// </summary>
    private void OnTouchBegan(TouchInfo touch)
    {
        Debug.Log($"üü¢ –ö–∞—Å–∞–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å! ID: {touch.TouchId}, –ü–æ–∑–∏—Ü–∏—è –≤ –ø—Ä–æ–µ–∫—Ü–∏–∏: {touch.PositionInProjection}, –ü–∏–∫—Å–µ–ª–µ–π: {touch.PixelCount}");
        
        // –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Å–∞–Ω–∏—è
        CreateTouchVisual(touch);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–≤—É—é –ª–æ–≥–∏–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:
        // - –°–æ–∑–¥–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü –≤ –º–µ—Å—Ç–µ –∫–∞—Å–∞–Ω–∏—è
        // - –ü—Ä–æ–∏–≥—Ä–∞—Ç—å –∑–≤—É–∫
        // - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–ø–∞–ª–æ –ª–∏ –∫–∞—Å–∞–Ω–∏–µ –≤ –∫–∞–∫–æ–π-—Ç–æ –∏–≥—Ä–æ–≤–æ–π –æ–±—ä–µ–∫—Ç
    }

    /// <summary>
    /// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –∫–∞—Å–∞–Ω–∏–µ –¥–≤–∏–∂–µ—Ç—Å—è.
    /// </summary>
    private void OnTouchMoved(TouchInfo touch)
    {
        Debug.Log($"üü° –ö–∞—Å–∞–Ω–∏–µ –¥–≤–∏–∂–µ—Ç—Å—è! ID: {touch.TouchId}, –ù–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è: {touch.PositionInProjection}, –°–º–µ—â–µ–Ω–∏–µ: {touch.DeltaPosition.magnitude:F2} –ø–∏–∫—Å–µ–ª–µ–π");
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
        UpdateTouchVisual(touch);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∂–µ—Å—Ç–æ–≤:
        // - –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–≤–∞–π–ø–æ–≤
        // - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
        // - –†–∏—Å–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è
    }

    /// <summary>
    /// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –∫–∞—Å–∞–Ω–∏–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è.
    /// </summary>
    private void OnTouchEnded(TouchInfo touch)
    {
        Debug.Log($"üî¥ –ö–∞—Å–∞–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å! ID: {touch.TouchId}, –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {touch.Duration:F2} —Å–µ–∫");
        
        // –£–¥–∞–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
        RemoveTouchVisual(touch.TouchId);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:
        // - –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–ª–∏–∫/—Ç–∞–ø
        // - –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ
        // - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∂–µ—Å—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±—ã–ª –ª–∏ —ç—Ç–æ —Å–≤–∞–π–ø)
    }

    /// <summary>
    /// –°–æ–∑–¥–∞–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Å–∞–Ω–∏—è –≤ 3D-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.
    /// </summary>
    private void CreateTouchVisual(TouchInfo touch)
    {
        if (touchVisualizationPrefab == null || touchContainer == null) return;

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
        GameObject visual = Instantiate(touchVisualizationPrefab, touchContainer);
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä–æ–µ–∫—Ü–∏–∏ –≤ –º–∏—Ä–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        Vector3 worldPosition = ProjectionToWorldPosition(touch.PositionInProjection);
        visual.transform.position = worldPosition;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–∑—É–∞–ª
        _touchVisuals[touch.TouchId] = visual;
        
        // –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–∑–º–µ—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∏–∫—Å–µ–ª–µ–π –∫–∞—Å–∞–Ω–∏—è
        float scale = Mathf.Clamp(touch.PixelCount / 20f, 0.5f, 2f);
        visual.transform.localScale = Vector3.one * scale;
    }

    /// <summary>
    /// –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–∑–∏—Ü–∏—é –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–∞—Å–∞–Ω–∏—è.
    /// </summary>
    private void UpdateTouchVisual(TouchInfo touch)
    {
        if (_touchVisuals.TryGetValue(touch.TouchId, out GameObject visual))
        {
            Vector3 worldPosition = ProjectionToWorldPosition(touch.PositionInProjection);
            visual.transform.position = worldPosition;
        }
    }

    /// <summary>
    /// –£–¥–∞–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Å–∞–Ω–∏—è.
    /// </summary>
    private void RemoveTouchVisual(int touchId)
    {
        if (_touchVisuals.TryGetValue(touchId, out GameObject visual))
        {
            Destroy(visual);
            _touchVisuals.Remove(touchId);
        }
    }

    /// <summary>
    /// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä–æ–µ–∫—Ü–∏–∏ (0-1) –≤ –º–∏—Ä–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
    /// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ü–µ–Ω—ã.
    /// </summary>
    private Vector3 ProjectionToWorldPosition(Vector2 projectionPos)
    {
        // –ü—Ä–∏–º–µ—Ä –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–ª–æ—Å–∫–æ—Å—Ç–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ Y=0
        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø—Ä–æ–µ–∫—Ü–∏—è –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –æ–±–ª–∞—Å—Ç—å –æ—Ç -5 –¥–æ +5 –ø–æ X –∏ Z
        float worldX = Mathf.Lerp(-5f, 5f, projectionPos.x);
        float worldZ = Mathf.Lerp(-5f, 5f, 1f - projectionPos.y); // –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Y –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        
        return new Vector3(worldX, 0.1f, worldZ);
    }

    void Update()
    {
        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –∫–∞—Å–∞–Ω–∏—è—Ö (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
        if (touchProcessor != null && touchProcessor.ActiveTouches.Count > 0)
        {
            // –≠—Ç—É —Å—Ç—Ä–æ–∫—É –º–æ–∂–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–µ –Ω—É–∂–µ–Ω
            // Debug.Log($"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Å–∞–Ω–∏–π: {touchProcessor.ActiveTouches.Count}");
        }
    }

    void OnGUI()
    {
        // –ü—Ä–æ—Å—Ç–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        if (touchProcessor == null) return;

        GUILayout.BeginArea(new Rect(10, 10, 300, 200));
        GUILayout.Label($"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Å–∞–Ω–∏–π: {touchProcessor.ActiveTouches.Count}");
        
        foreach (var touch in touchProcessor.ActiveTouches)
        {
            GUILayout.Label($"ID {touch.TouchId}: {touch.State} –≤ ({touch.PositionInProjection.x:F2}, {touch.PositionInProjection.y:F2})");
        }
        GUILayout.EndArea();
    }
}

